#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InterLinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDEscola")]
	public partial class BDEscolaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBimestre(Bimestre instance);
    partial void UpdateBimestre(Bimestre instance);
    partial void DeleteBimestre(Bimestre instance);
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertDisciplina(Disciplina instance);
    partial void UpdateDisciplina(Disciplina instance);
    partial void DeleteDisciplina(Disciplina instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertPai(Pai instance);
    partial void UpdatePai(Pai instance);
    partial void DeletePai(Pai instance);
    partial void InsertPessoa(Pessoa instance);
    partial void UpdatePessoa(Pessoa instance);
    partial void DeletePessoa(Pessoa instance);
    partial void InsertProfessor(Professor instance);
    partial void UpdateProfessor(Professor instance);
    partial void DeleteProfessor(Professor instance);
    partial void Insertstatus(status instance);
    partial void Updatestatus(status instance);
    partial void Deletestatus(status instance);
    partial void InsertTelefone(Telefone instance);
    partial void UpdateTelefone(Telefone instance);
    partial void DeleteTelefone(Telefone instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void Insertr_Turma_Disc_Prof(r_Turma_Disc_Prof instance);
    partial void Updater_Turma_Disc_Prof(r_Turma_Disc_Prof instance);
    partial void Deleter_Turma_Disc_Prof(r_Turma_Disc_Prof instance);
    partial void InsertTurma(Turma instance);
    partial void UpdateTurma(Turma instance);
    partial void DeleteTurma(Turma instance);
    partial void InsertMatricula(Matricula instance);
    partial void UpdateMatricula(Matricula instance);
    partial void DeleteMatricula(Matricula instance);
    partial void Insertr_matr_r_Turma_Disc_Prof(r_matr_r_Turma_Disc_Prof instance);
    partial void Updater_matr_r_Turma_Disc_Prof(r_matr_r_Turma_Disc_Prof instance);
    partial void Deleter_matr_r_Turma_Disc_Prof(r_matr_r_Turma_Disc_Prof instance);
    partial void InsertAluno(Aluno instance);
    partial void UpdateAluno(Aluno instance);
    partial void DeleteAluno(Aluno instance);
    partial void Inserthistorico(historico instance);
    partial void Updatehistorico(historico instance);
    partial void Deletehistorico(historico instance);
    partial void InsertAnotacoe(Anotacoe instance);
    partial void UpdateAnotacoe(Anotacoe instance);
    partial void DeleteAnotacoe(Anotacoe instance);
    partial void InsertAnoLetivo(AnoLetivo instance);
    partial void UpdateAnoLetivo(AnoLetivo instance);
    partial void DeleteAnoLetivo(AnoLetivo instance);
    #endregion
		
		public BDEscolaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BDEscolaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BDEscolaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDEscolaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDEscolaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDEscolaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bimestre> Bimestres
		{
			get
			{
				return this.GetTable<Bimestre>();
			}
		}
		
		public System.Data.Linq.Table<Cidade> Cidades
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<Disciplina> Disciplinas
		{
			get
			{
				return this.GetTable<Disciplina>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Pai> Pais
		{
			get
			{
				return this.GetTable<Pai>();
			}
		}
		
		public System.Data.Linq.Table<Pessoa> Pessoas
		{
			get
			{
				return this.GetTable<Pessoa>();
			}
		}
		
		public System.Data.Linq.Table<Professor> Professors
		{
			get
			{
				return this.GetTable<Professor>();
			}
		}
		
		public System.Data.Linq.Table<status> status
		{
			get
			{
				return this.GetTable<status>();
			}
		}
		
		public System.Data.Linq.Table<Telefone> Telefones
		{
			get
			{
				return this.GetTable<Telefone>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<r_Turma_Disc_Prof> r_Turma_Disc_Profs
		{
			get
			{
				return this.GetTable<r_Turma_Disc_Prof>();
			}
		}
		
		public System.Data.Linq.Table<Turma> Turmas
		{
			get
			{
				return this.GetTable<Turma>();
			}
		}
		
		public System.Data.Linq.Table<Matricula> Matriculas
		{
			get
			{
				return this.GetTable<Matricula>();
			}
		}
		
		public System.Data.Linq.Table<r_matr_r_Turma_Disc_Prof> r_matr_r_Turma_Disc_Profs
		{
			get
			{
				return this.GetTable<r_matr_r_Turma_Disc_Prof>();
			}
		}
		
		public System.Data.Linq.Table<Aluno> Alunos
		{
			get
			{
				return this.GetTable<Aluno>();
			}
		}
		
		public System.Data.Linq.Table<historico> historicos
		{
			get
			{
				return this.GetTable<historico>();
			}
		}
		
		public System.Data.Linq.Table<Anotacoe> Anotacoes
		{
			get
			{
				return this.GetTable<Anotacoe>();
			}
		}
		
		public System.Data.Linq.Table<AnoLetivo> AnoLetivos
		{
			get
			{
				return this.GetTable<AnoLetivo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bimestre")]
	public partial class Bimestre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private int _status;
		
		private EntitySet<r_matr_r_Turma_Disc_Prof> _r_matr_r_Turma_Disc_Profs;
		
		private EntityRef<status> _status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public Bimestre()
		{
			this._r_matr_r_Turma_Disc_Profs = new EntitySet<r_matr_r_Turma_Disc_Prof>(new Action<r_matr_r_Turma_Disc_Prof>(this.attach_r_matr_r_Turma_Disc_Profs), new Action<r_matr_r_Turma_Disc_Prof>(this.detach_r_matr_r_Turma_Disc_Profs));
			this._status1 = default(EntityRef<status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bimestre_r_matr_r_Turma_Disc_Prof", Storage="_r_matr_r_Turma_Disc_Profs", ThisKey="id", OtherKey="id_bimestre")]
		public EntitySet<r_matr_r_Turma_Disc_Prof> r_matr_r_Turma_Disc_Profs
		{
			get
			{
				return this._r_matr_r_Turma_Disc_Profs;
			}
			set
			{
				this._r_matr_r_Turma_Disc_Profs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_Bimestre", Storage="_status1", ThisKey="status", OtherKey="id", IsForeignKey=true)]
		public status status1
		{
			get
			{
				return this._status1.Entity;
			}
			set
			{
				status previousValue = this._status1.Entity;
				if (((previousValue != value) 
							|| (this._status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._status1.Entity = null;
						previousValue.Bimestres.Remove(this);
					}
					this._status1.Entity = value;
					if ((value != null))
					{
						value.Bimestres.Add(this);
						this._status = value.id;
					}
					else
					{
						this._status = default(int);
					}
					this.SendPropertyChanged("status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_r_matr_r_Turma_Disc_Profs(r_matr_r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Bimestre = this;
		}
		
		private void detach_r_matr_r_Turma_Disc_Profs(r_matr_r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Bimestre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cidade")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private int _id_estado;
		
		private bool _capital;
		
		private EntitySet<Pessoa> _Pessoas;
		
		private EntitySet<historico> _historicos;
		
		private EntityRef<Estado> _Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void OncapitalChanging(bool value);
    partial void OncapitalChanged();
    #endregion
		
		public Cidade()
		{
			this._Pessoas = new EntitySet<Pessoa>(new Action<Pessoa>(this.attach_Pessoas), new Action<Pessoa>(this.detach_Pessoas));
			this._historicos = new EntitySet<historico>(new Action<historico>(this.attach_historicos), new Action<historico>(this.detach_historicos));
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capital", DbType="Bit NOT NULL")]
		public bool capital
		{
			get
			{
				return this._capital;
			}
			set
			{
				if ((this._capital != value))
				{
					this.OncapitalChanging(value);
					this.SendPropertyChanging();
					this._capital = value;
					this.SendPropertyChanged("capital");
					this.OncapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pessoa", Storage="_Pessoas", ThisKey="id", OtherKey="localidade")]
		public EntitySet<Pessoa> Pessoas
		{
			get
			{
				return this._Pessoas;
			}
			set
			{
				this._Pessoas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_historico", Storage="_historicos", ThisKey="id", OtherKey="id_cidade")]
		public EntitySet<historico> historicos
		{
			get
			{
				return this._historicos;
			}
			set
			{
				this._historicos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Cidade", Storage="_Estado", ThisKey="id_estado", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Cidades.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Cidades.Add(this);
						this._id_estado = value.id;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pessoas(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Pessoas(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
		
		private void attach_historicos(historico entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_historicos(historico entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disciplina")]
	public partial class Disciplina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _informacoes;
		
		private EntitySet<r_Turma_Disc_Prof> _r_Turma_Disc_Profs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OninformacoesChanging(string value);
    partial void OninformacoesChanged();
    #endregion
		
		public Disciplina()
		{
			this._r_Turma_Disc_Profs = new EntitySet<r_Turma_Disc_Prof>(new Action<r_Turma_Disc_Prof>(this.attach_r_Turma_Disc_Profs), new Action<r_Turma_Disc_Prof>(this.detach_r_Turma_Disc_Profs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_informacoes", DbType="VarChar(MAX)")]
		public string informacoes
		{
			get
			{
				return this._informacoes;
			}
			set
			{
				if ((this._informacoes != value))
				{
					this.OninformacoesChanging(value);
					this.SendPropertyChanging();
					this._informacoes = value;
					this.SendPropertyChanged("informacoes");
					this.OninformacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_r_Turma_Disc_Prof", Storage="_r_Turma_Disc_Profs", ThisKey="id", OtherKey="id_disciplina")]
		public EntitySet<r_Turma_Disc_Prof> r_Turma_Disc_Profs
		{
			get
			{
				return this._r_Turma_Disc_Profs;
			}
			set
			{
				this._r_Turma_Disc_Profs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_r_Turma_Disc_Profs(r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = this;
		}
		
		private void detach_r_Turma_Disc_Profs(r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_pais;
		
		private string _sigla;
		
		private string _nome;
		
		private EntitySet<Cidade> _Cidades;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_paisChanging(int value);
    partial void Onid_paisChanged();
    partial void OnsiglaChanging(string value);
    partial void OnsiglaChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public Estado()
		{
			this._Cidades = new EntitySet<Cidade>(new Action<Cidade>(this.attach_Cidades), new Action<Cidade>(this.detach_Cidades));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pais", DbType="Int NOT NULL")]
		public int id_pais
		{
			get
			{
				return this._id_pais;
			}
			set
			{
				if ((this._id_pais != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_paisChanging(value);
					this.SendPropertyChanging();
					this._id_pais = value;
					this.SendPropertyChanged("id_pais");
					this.Onid_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sigla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string sigla
		{
			get
			{
				return this._sigla;
			}
			set
			{
				if ((this._sigla != value))
				{
					this.OnsiglaChanging(value);
					this.SendPropertyChanging();
					this._sigla = value;
					this.SendPropertyChanged("sigla");
					this.OnsiglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Cidade", Storage="_Cidades", ThisKey="id", OtherKey="id_estado")]
		public EntitySet<Cidade> Cidades
		{
			get
			{
				return this._Cidades;
			}
			set
			{
				this._Cidades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Estado", Storage="_Pai", ThisKey="id_pais", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Estados.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Estados.Add(this);
						this._id_pais = value.id;
					}
					else
					{
						this._id_pais = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private EntitySet<Estado> _Estados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public Pai()
		{
			this._Estados = new EntitySet<Estado>(new Action<Estado>(this.attach_Estados), new Action<Estado>(this.detach_Estados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Estado", Storage="_Estados", ThisKey="id", OtherKey="id_pais")]
		public EntitySet<Estado> Estados
		{
			get
			{
				return this._Estados;
			}
			set
			{
				this._Estados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estados(Estado entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Estados(Estado entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pessoa")]
	public partial class Pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _data_nasc;
		
		private string _sexo;
		
		private string _cpf;
		
		private string _rg;
		
		private string _rua;
		
		private string _bairro;
		
		private string _complemento;
		
		private int _localidade;
		
		private EntityRef<Professor> _Professor;
		
		private EntityRef<Telefone> _Telefone;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Aluno> _Aluno;
		
		private EntityRef<Cidade> _Cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void Ondata_nascChanging(string value);
    partial void Ondata_nascChanged();
    partial void OnsexoChanging(string value);
    partial void OnsexoChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OnrgChanging(string value);
    partial void OnrgChanged();
    partial void OnruaChanging(string value);
    partial void OnruaChanged();
    partial void OnbairroChanging(string value);
    partial void OnbairroChanged();
    partial void OncomplementoChanging(string value);
    partial void OncomplementoChanged();
    partial void OnlocalidadeChanging(int value);
    partial void OnlocalidadeChanged();
    #endregion
		
		public Pessoa()
		{
			this._Professor = default(EntityRef<Professor>);
			this._Telefone = default(EntityRef<Telefone>);
			this._Usuario = default(EntityRef<Usuario>);
			this._Aluno = default(EntityRef<Aluno>);
			this._Cidade = default(EntityRef<Cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_nasc", DbType="VarChar(10)")]
		public string data_nasc
		{
			get
			{
				return this._data_nasc;
			}
			set
			{
				if ((this._data_nasc != value))
				{
					this.Ondata_nascChanging(value);
					this.SendPropertyChanging();
					this._data_nasc = value;
					this.SendPropertyChanged("data_nasc");
					this.Ondata_nascChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="VarChar(20)")]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rg", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string rg
		{
			get
			{
				return this._rg;
			}
			set
			{
				if ((this._rg != value))
				{
					this.OnrgChanging(value);
					this.SendPropertyChanging();
					this._rg = value;
					this.SendPropertyChanged("rg");
					this.OnrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rua", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string rua
		{
			get
			{
				return this._rua;
			}
			set
			{
				if ((this._rua != value))
				{
					this.OnruaChanging(value);
					this.SendPropertyChanging();
					this._rua = value;
					this.SendPropertyChanged("rua");
					this.OnruaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bairro", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string bairro
		{
			get
			{
				return this._bairro;
			}
			set
			{
				if ((this._bairro != value))
				{
					this.OnbairroChanging(value);
					this.SendPropertyChanging();
					this._bairro = value;
					this.SendPropertyChanged("bairro");
					this.OnbairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complemento", DbType="VarChar(100)")]
		public string complemento
		{
			get
			{
				return this._complemento;
			}
			set
			{
				if ((this._complemento != value))
				{
					this.OncomplementoChanging(value);
					this.SendPropertyChanging();
					this._complemento = value;
					this.SendPropertyChanged("complemento");
					this.OncomplementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localidade", DbType="Int NOT NULL")]
		public int localidade
		{
			get
			{
				return this._localidade;
			}
			set
			{
				if ((this._localidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocalidadeChanging(value);
					this.SendPropertyChanging();
					this._localidade = value;
					this.SendPropertyChanged("localidade");
					this.OnlocalidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Professor", Storage="_Professor", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Professor Professor
		{
			get
			{
				return this._Professor.Entity;
			}
			set
			{
				Professor previousValue = this._Professor.Entity;
				if (((previousValue != value) 
							|| (this._Professor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professor.Entity = null;
						previousValue.Pessoa = null;
					}
					this._Professor.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
					}
					this.SendPropertyChanged("Professor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Telefone", Storage="_Telefone", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Telefone Telefone
		{
			get
			{
				return this._Telefone.Entity;
			}
			set
			{
				Telefone previousValue = this._Telefone.Entity;
				if (((previousValue != value) 
							|| (this._Telefone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telefone.Entity = null;
						previousValue.Pessoa = null;
					}
					this._Telefone.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
					}
					this.SendPropertyChanged("Telefone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Usuario", Storage="_Usuario", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Pessoa = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Aluno", Storage="_Aluno", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.Pessoa = null;
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pessoa", Storage="_Cidade", ThisKey="localidade", OtherKey="id", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Pessoas.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Pessoas.Add(this);
						this._localidade = value.id;
					}
					else
					{
						this._localidade = default(int);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Professor")]
	public partial class Professor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _registr;
		
		private EntitySet<r_Turma_Disc_Prof> _r_Turma_Disc_Profs;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnregistrChanging(string value);
    partial void OnregistrChanged();
    #endregion
		
		public Professor()
		{
			this._r_Turma_Disc_Profs = new EntitySet<r_Turma_Disc_Prof>(new Action<r_Turma_Disc_Prof>(this.attach_r_Turma_Disc_Profs), new Action<r_Turma_Disc_Prof>(this.detach_r_Turma_Disc_Profs));
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string registr
		{
			get
			{
				return this._registr;
			}
			set
			{
				if ((this._registr != value))
				{
					this.OnregistrChanging(value);
					this.SendPropertyChanging();
					this._registr = value;
					this.SendPropertyChanged("registr");
					this.OnregistrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professor_r_Turma_Disc_Prof", Storage="_r_Turma_Disc_Profs", ThisKey="id", OtherKey="id_prof")]
		public EntitySet<r_Turma_Disc_Prof> r_Turma_Disc_Profs
		{
			get
			{
				return this._r_Turma_Disc_Profs;
			}
			set
			{
				this._r_Turma_Disc_Profs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Professor", Storage="_Pessoa", ThisKey="id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Professor = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Professor = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_r_Turma_Disc_Profs(r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Professor = this;
		}
		
		private void detach_r_Turma_Disc_Profs(r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Professor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.status")]
	public partial class status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _descricao;
		
		private EntitySet<Bimestre> _Bimestres;
		
		private EntitySet<Aluno> _Alunos;
		
		private EntitySet<AnoLetivo> _AnoLetivos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    #endregion
		
		public status()
		{
			this._Bimestres = new EntitySet<Bimestre>(new Action<Bimestre>(this.attach_Bimestres), new Action<Bimestre>(this.detach_Bimestres));
			this._Alunos = new EntitySet<Aluno>(new Action<Aluno>(this.attach_Alunos), new Action<Aluno>(this.detach_Alunos));
			this._AnoLetivos = new EntitySet<AnoLetivo>(new Action<AnoLetivo>(this.attach_AnoLetivos), new Action<AnoLetivo>(this.detach_AnoLetivos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_Bimestre", Storage="_Bimestres", ThisKey="id", OtherKey="status")]
		public EntitySet<Bimestre> Bimestres
		{
			get
			{
				return this._Bimestres;
			}
			set
			{
				this._Bimestres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_Aluno", Storage="_Alunos", ThisKey="id", OtherKey="status")]
		public EntitySet<Aluno> Alunos
		{
			get
			{
				return this._Alunos;
			}
			set
			{
				this._Alunos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_AnoLetivo", Storage="_AnoLetivos", ThisKey="id", OtherKey="status")]
		public EntitySet<AnoLetivo> AnoLetivos
		{
			get
			{
				return this._AnoLetivos;
			}
			set
			{
				this._AnoLetivos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bimestres(Bimestre entity)
		{
			this.SendPropertyChanging();
			entity.status1 = this;
		}
		
		private void detach_Bimestres(Bimestre entity)
		{
			this.SendPropertyChanging();
			entity.status1 = null;
		}
		
		private void attach_Alunos(Aluno entity)
		{
			this.SendPropertyChanging();
			entity.status1 = this;
		}
		
		private void detach_Alunos(Aluno entity)
		{
			this.SendPropertyChanging();
			entity.status1 = null;
		}
		
		private void attach_AnoLetivos(AnoLetivo entity)
		{
			this.SendPropertyChanging();
			entity.status1 = this;
		}
		
		private void detach_AnoLetivos(AnoLetivo entity)
		{
			this.SendPropertyChanging();
			entity.status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Telefone")]
	public partial class Telefone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tel_pessoal;
		
		private string _tel_residencia;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontel_pessoalChanging(string value);
    partial void Ontel_pessoalChanged();
    partial void Ontel_residenciaChanging(string value);
    partial void Ontel_residenciaChanged();
    #endregion
		
		public Telefone()
		{
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_pessoal", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string tel_pessoal
		{
			get
			{
				return this._tel_pessoal;
			}
			set
			{
				if ((this._tel_pessoal != value))
				{
					this.Ontel_pessoalChanging(value);
					this.SendPropertyChanging();
					this._tel_pessoal = value;
					this.SendPropertyChanged("tel_pessoal");
					this.Ontel_pessoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_residencia", DbType="VarChar(20)")]
		public string tel_residencia
		{
			get
			{
				return this._tel_residencia;
			}
			set
			{
				if ((this._tel_residencia != value))
				{
					this.Ontel_residenciaChanging(value);
					this.SendPropertyChanging();
					this._tel_residencia = value;
					this.SendPropertyChanged("tel_residencia");
					this.Ontel_residenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Telefone", Storage="_Pessoa", ThisKey="id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Telefone = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Telefone = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _senha;
		
		private string _permissao;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsenhaChanging(string value);
    partial void OnsenhaChanged();
    partial void OnpermissaoChanging(string value);
    partial void OnpermissaoChanged();
    #endregion
		
		public Usuario()
		{
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senha", DbType="VarChar(MAX)")]
		public string senha
		{
			get
			{
				return this._senha;
			}
			set
			{
				if ((this._senha != value))
				{
					this.OnsenhaChanging(value);
					this.SendPropertyChanging();
					this._senha = value;
					this.SendPropertyChanged("senha");
					this.OnsenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissao", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string permissao
		{
			get
			{
				return this._permissao;
			}
			set
			{
				if ((this._permissao != value))
				{
					this.OnpermissaoChanging(value);
					this.SendPropertyChanging();
					this._permissao = value;
					this.SendPropertyChanged("permissao");
					this.OnpermissaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Usuario", Storage="_Pessoa", ThisKey="id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Usuario = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.r_Turma_Disc_Prof")]
	public partial class r_Turma_Disc_Prof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_turma;
		
		private int _id_disciplina;
		
		private int _id_prof;
		
		private System.Nullable<int> _data;
		
		private System.Nullable<int> _desativado;
		
		private EntitySet<r_matr_r_Turma_Disc_Prof> _r_matr_r_Turma_Disc_Profs;
		
		private EntityRef<Disciplina> _Disciplina;
		
		private EntityRef<Professor> _Professor;
		
		private EntityRef<Turma> _Turma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_turmaChanging(int value);
    partial void Onid_turmaChanged();
    partial void Onid_disciplinaChanging(int value);
    partial void Onid_disciplinaChanged();
    partial void Onid_profChanging(int value);
    partial void Onid_profChanged();
    partial void OndataChanging(System.Nullable<int> value);
    partial void OndataChanged();
    partial void OndesativadoChanging(System.Nullable<int> value);
    partial void OndesativadoChanged();
    #endregion
		
		public r_Turma_Disc_Prof()
		{
			this._r_matr_r_Turma_Disc_Profs = new EntitySet<r_matr_r_Turma_Disc_Prof>(new Action<r_matr_r_Turma_Disc_Prof>(this.attach_r_matr_r_Turma_Disc_Profs), new Action<r_matr_r_Turma_Disc_Prof>(this.detach_r_matr_r_Turma_Disc_Profs));
			this._Disciplina = default(EntityRef<Disciplina>);
			this._Professor = default(EntityRef<Professor>);
			this._Turma = default(EntityRef<Turma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_turma", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_turma
		{
			get
			{
				return this._id_turma;
			}
			set
			{
				if ((this._id_turma != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_turmaChanging(value);
					this.SendPropertyChanging();
					this._id_turma = value;
					this.SendPropertyChanged("id_turma");
					this.Onid_turmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_disciplina", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_disciplina
		{
			get
			{
				return this._id_disciplina;
			}
			set
			{
				if ((this._id_disciplina != value))
				{
					if (this._Disciplina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_disciplinaChanging(value);
					this.SendPropertyChanging();
					this._id_disciplina = value;
					this.SendPropertyChanged("id_disciplina");
					this.Onid_disciplinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_prof", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_prof
		{
			get
			{
				return this._id_prof;
			}
			set
			{
				if ((this._id_prof != value))
				{
					if (this._Professor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_profChanging(value);
					this.SendPropertyChanging();
					this._id_prof = value;
					this.SendPropertyChanged("id_prof");
					this.Onid_profChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Int")]
		public System.Nullable<int> data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="Int")]
		public System.Nullable<int> desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="r_Turma_Disc_Prof_r_matr_r_Turma_Disc_Prof", Storage="_r_matr_r_Turma_Disc_Profs", ThisKey="id_turma,id_disciplina,id_prof", OtherKey="id_turma,id_disci,id_prof")]
		public EntitySet<r_matr_r_Turma_Disc_Prof> r_matr_r_Turma_Disc_Profs
		{
			get
			{
				return this._r_matr_r_Turma_Disc_Profs;
			}
			set
			{
				this._r_matr_r_Turma_Disc_Profs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_r_Turma_Disc_Prof", Storage="_Disciplina", ThisKey="id_disciplina", OtherKey="id", IsForeignKey=true)]
		public Disciplina Disciplina
		{
			get
			{
				return this._Disciplina.Entity;
			}
			set
			{
				Disciplina previousValue = this._Disciplina.Entity;
				if (((previousValue != value) 
							|| (this._Disciplina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disciplina.Entity = null;
						previousValue.r_Turma_Disc_Profs.Remove(this);
					}
					this._Disciplina.Entity = value;
					if ((value != null))
					{
						value.r_Turma_Disc_Profs.Add(this);
						this._id_disciplina = value.id;
					}
					else
					{
						this._id_disciplina = default(int);
					}
					this.SendPropertyChanged("Disciplina");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professor_r_Turma_Disc_Prof", Storage="_Professor", ThisKey="id_prof", OtherKey="id", IsForeignKey=true)]
		public Professor Professor
		{
			get
			{
				return this._Professor.Entity;
			}
			set
			{
				Professor previousValue = this._Professor.Entity;
				if (((previousValue != value) 
							|| (this._Professor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professor.Entity = null;
						previousValue.r_Turma_Disc_Profs.Remove(this);
					}
					this._Professor.Entity = value;
					if ((value != null))
					{
						value.r_Turma_Disc_Profs.Add(this);
						this._id_prof = value.id;
					}
					else
					{
						this._id_prof = default(int);
					}
					this.SendPropertyChanged("Professor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_r_Turma_Disc_Prof", Storage="_Turma", ThisKey="id_turma", OtherKey="id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.r_Turma_Disc_Profs.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.r_Turma_Disc_Profs.Add(this);
						this._id_turma = value.id;
					}
					else
					{
						this._id_turma = default(int);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_r_matr_r_Turma_Disc_Profs(r_matr_r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.r_Turma_Disc_Prof = this;
		}
		
		private void detach_r_matr_r_Turma_Disc_Profs(r_matr_r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.r_Turma_Disc_Prof = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Turma")]
	public partial class Turma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _periodo;
		
		private System.Nullable<int> _desativado;
		
		private EntitySet<r_Turma_Disc_Prof> _r_Turma_Disc_Profs;
		
		private EntitySet<Matricula> _Matriculas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnperiodoChanging(string value);
    partial void OnperiodoChanged();
    partial void OndesativadoChanging(System.Nullable<int> value);
    partial void OndesativadoChanged();
    #endregion
		
		public Turma()
		{
			this._r_Turma_Disc_Profs = new EntitySet<r_Turma_Disc_Prof>(new Action<r_Turma_Disc_Prof>(this.attach_r_Turma_Disc_Profs), new Action<r_Turma_Disc_Prof>(this.detach_r_Turma_Disc_Profs));
			this._Matriculas = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matriculas), new Action<Matricula>(this.detach_Matriculas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string periodo
		{
			get
			{
				return this._periodo;
			}
			set
			{
				if ((this._periodo != value))
				{
					this.OnperiodoChanging(value);
					this.SendPropertyChanging();
					this._periodo = value;
					this.SendPropertyChanged("periodo");
					this.OnperiodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="Int")]
		public System.Nullable<int> desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_r_Turma_Disc_Prof", Storage="_r_Turma_Disc_Profs", ThisKey="id", OtherKey="id_turma")]
		public EntitySet<r_Turma_Disc_Prof> r_Turma_Disc_Profs
		{
			get
			{
				return this._r_Turma_Disc_Profs;
			}
			set
			{
				this._r_Turma_Disc_Profs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Matricula", Storage="_Matriculas", ThisKey="id", OtherKey="id_turma")]
		public EntitySet<Matricula> Matriculas
		{
			get
			{
				return this._Matriculas;
			}
			set
			{
				this._Matriculas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_r_Turma_Disc_Profs(r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_r_Turma_Disc_Profs(r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
		
		private void attach_Matriculas(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_Matriculas(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matricula")]
	public partial class Matricula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_aluno;
		
		private int _id_turma;
		
		private int _data;
		
		private int _desativado;
		
		private EntitySet<r_matr_r_Turma_Disc_Prof> _r_matr_r_Turma_Disc_Profs;
		
		private EntityRef<Turma> _Turma;
		
		private EntityRef<Aluno> _Aluno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_alunoChanging(int value);
    partial void Onid_alunoChanged();
    partial void Onid_turmaChanging(int value);
    partial void Onid_turmaChanged();
    partial void OndataChanging(int value);
    partial void OndataChanged();
    partial void OndesativadoChanging(int value);
    partial void OndesativadoChanged();
    #endregion
		
		public Matricula()
		{
			this._r_matr_r_Turma_Disc_Profs = new EntitySet<r_matr_r_Turma_Disc_Prof>(new Action<r_matr_r_Turma_Disc_Prof>(this.attach_r_matr_r_Turma_Disc_Profs), new Action<r_matr_r_Turma_Disc_Prof>(this.detach_r_matr_r_Turma_Disc_Profs));
			this._Turma = default(EntityRef<Turma>);
			this._Aluno = default(EntityRef<Aluno>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_aluno", DbType="Int NOT NULL")]
		public int id_aluno
		{
			get
			{
				return this._id_aluno;
			}
			set
			{
				if ((this._id_aluno != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_alunoChanging(value);
					this.SendPropertyChanging();
					this._id_aluno = value;
					this.SendPropertyChanged("id_aluno");
					this.Onid_alunoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_turma", DbType="Int NOT NULL")]
		public int id_turma
		{
			get
			{
				return this._id_turma;
			}
			set
			{
				if ((this._id_turma != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_turmaChanging(value);
					this.SendPropertyChanging();
					this._id_turma = value;
					this.SendPropertyChanged("id_turma");
					this.Onid_turmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matricula_r_matr_r_Turma_Disc_Prof", Storage="_r_matr_r_Turma_Disc_Profs", ThisKey="id,data,desativado", OtherKey="id_matricula,data,desativado")]
		public EntitySet<r_matr_r_Turma_Disc_Prof> r_matr_r_Turma_Disc_Profs
		{
			get
			{
				return this._r_matr_r_Turma_Disc_Profs;
			}
			set
			{
				this._r_matr_r_Turma_Disc_Profs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Matricula", Storage="_Turma", ThisKey="id_turma", OtherKey="id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.Matriculas.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.Matriculas.Add(this);
						this._id_turma = value.id;
					}
					else
					{
						this._id_turma = default(int);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Matricula", Storage="_Aluno", ThisKey="id_aluno", OtherKey="id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.Matriculas.Remove(this);
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.Matriculas.Add(this);
						this._id_aluno = value.id;
					}
					else
					{
						this._id_aluno = default(int);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_r_matr_r_Turma_Disc_Profs(r_matr_r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Matricula = this;
		}
		
		private void detach_r_matr_r_Turma_Disc_Profs(r_matr_r_Turma_Disc_Prof entity)
		{
			this.SendPropertyChanging();
			entity.Matricula = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.r_matr_r_Turma_Disc_Prof")]
	public partial class r_matr_r_Turma_Disc_Prof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_matricula;
		
		private int _id_prof;
		
		private int _id_turma;
		
		private int _id_disci;
		
		private decimal _nota;
		
		private int _faltas;
		
		private int _id_bimestre;
		
		private int _data;
		
		private int _desativado;
		
		private EntityRef<Bimestre> _Bimestre;
		
		private EntityRef<r_Turma_Disc_Prof> _r_Turma_Disc_Prof;
		
		private EntityRef<Matricula> _Matricula;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_matriculaChanging(int value);
    partial void Onid_matriculaChanged();
    partial void Onid_profChanging(int value);
    partial void Onid_profChanged();
    partial void Onid_turmaChanging(int value);
    partial void Onid_turmaChanged();
    partial void Onid_disciChanging(int value);
    partial void Onid_disciChanged();
    partial void OnnotaChanging(decimal value);
    partial void OnnotaChanged();
    partial void OnfaltasChanging(int value);
    partial void OnfaltasChanged();
    partial void Onid_bimestreChanging(int value);
    partial void Onid_bimestreChanged();
    partial void OndataChanging(int value);
    partial void OndataChanged();
    partial void OndesativadoChanging(int value);
    partial void OndesativadoChanged();
    #endregion
		
		public r_matr_r_Turma_Disc_Prof()
		{
			this._Bimestre = default(EntityRef<Bimestre>);
			this._r_Turma_Disc_Prof = default(EntityRef<r_Turma_Disc_Prof>);
			this._Matricula = default(EntityRef<Matricula>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_matricula", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_matricula
		{
			get
			{
				return this._id_matricula;
			}
			set
			{
				if ((this._id_matricula != value))
				{
					if (this._Matricula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_matriculaChanging(value);
					this.SendPropertyChanging();
					this._id_matricula = value;
					this.SendPropertyChanged("id_matricula");
					this.Onid_matriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_prof", DbType="Int NOT NULL")]
		public int id_prof
		{
			get
			{
				return this._id_prof;
			}
			set
			{
				if ((this._id_prof != value))
				{
					if (this._r_Turma_Disc_Prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_profChanging(value);
					this.SendPropertyChanging();
					this._id_prof = value;
					this.SendPropertyChanged("id_prof");
					this.Onid_profChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_turma", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_turma
		{
			get
			{
				return this._id_turma;
			}
			set
			{
				if ((this._id_turma != value))
				{
					if (this._r_Turma_Disc_Prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_turmaChanging(value);
					this.SendPropertyChanging();
					this._id_turma = value;
					this.SendPropertyChanged("id_turma");
					this.Onid_turmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_disci", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_disci
		{
			get
			{
				return this._id_disci;
			}
			set
			{
				if ((this._id_disci != value))
				{
					if (this._r_Turma_Disc_Prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_disciChanging(value);
					this.SendPropertyChanging();
					this._id_disci = value;
					this.SendPropertyChanged("id_disci");
					this.Onid_disciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nota", DbType="Decimal(18,0) NOT NULL")]
		public decimal nota
		{
			get
			{
				return this._nota;
			}
			set
			{
				if ((this._nota != value))
				{
					this.OnnotaChanging(value);
					this.SendPropertyChanging();
					this._nota = value;
					this.SendPropertyChanged("nota");
					this.OnnotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faltas", DbType="Int NOT NULL")]
		public int faltas
		{
			get
			{
				return this._faltas;
			}
			set
			{
				if ((this._faltas != value))
				{
					this.OnfaltasChanging(value);
					this.SendPropertyChanging();
					this._faltas = value;
					this.SendPropertyChanged("faltas");
					this.OnfaltasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bimestre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_bimestre
		{
			get
			{
				return this._id_bimestre;
			}
			set
			{
				if ((this._id_bimestre != value))
				{
					if (this._Bimestre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bimestreChanging(value);
					this.SendPropertyChanging();
					this._id_bimestre = value;
					this.SendPropertyChanged("id_bimestre");
					this.Onid_bimestreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					if (this._Matricula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="Int NOT NULL")]
		public int desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					if (this._Matricula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bimestre_r_matr_r_Turma_Disc_Prof", Storage="_Bimestre", ThisKey="id_bimestre", OtherKey="id", IsForeignKey=true)]
		public Bimestre Bimestre
		{
			get
			{
				return this._Bimestre.Entity;
			}
			set
			{
				Bimestre previousValue = this._Bimestre.Entity;
				if (((previousValue != value) 
							|| (this._Bimestre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bimestre.Entity = null;
						previousValue.r_matr_r_Turma_Disc_Profs.Remove(this);
					}
					this._Bimestre.Entity = value;
					if ((value != null))
					{
						value.r_matr_r_Turma_Disc_Profs.Add(this);
						this._id_bimestre = value.id;
					}
					else
					{
						this._id_bimestre = default(int);
					}
					this.SendPropertyChanged("Bimestre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="r_Turma_Disc_Prof_r_matr_r_Turma_Disc_Prof", Storage="_r_Turma_Disc_Prof", ThisKey="id_turma,id_disci,id_prof", OtherKey="id_turma,id_disciplina,id_prof", IsForeignKey=true)]
		public r_Turma_Disc_Prof r_Turma_Disc_Prof
		{
			get
			{
				return this._r_Turma_Disc_Prof.Entity;
			}
			set
			{
				r_Turma_Disc_Prof previousValue = this._r_Turma_Disc_Prof.Entity;
				if (((previousValue != value) 
							|| (this._r_Turma_Disc_Prof.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._r_Turma_Disc_Prof.Entity = null;
						previousValue.r_matr_r_Turma_Disc_Profs.Remove(this);
					}
					this._r_Turma_Disc_Prof.Entity = value;
					if ((value != null))
					{
						value.r_matr_r_Turma_Disc_Profs.Add(this);
						this._id_turma = value.id_turma;
						this._id_disci = value.id_disciplina;
						this._id_prof = value.id_prof;
					}
					else
					{
						this._id_turma = default(int);
						this._id_disci = default(int);
						this._id_prof = default(int);
					}
					this.SendPropertyChanged("r_Turma_Disc_Prof");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matricula_r_matr_r_Turma_Disc_Prof", Storage="_Matricula", ThisKey="id_matricula,data,desativado", OtherKey="id,data,desativado", IsForeignKey=true)]
		public Matricula Matricula
		{
			get
			{
				return this._Matricula.Entity;
			}
			set
			{
				Matricula previousValue = this._Matricula.Entity;
				if (((previousValue != value) 
							|| (this._Matricula.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Matricula.Entity = null;
						previousValue.r_matr_r_Turma_Disc_Profs.Remove(this);
					}
					this._Matricula.Entity = value;
					if ((value != null))
					{
						value.r_matr_r_Turma_Disc_Profs.Add(this);
						this._id_matricula = value.id;
						this._data = value.data;
						this._desativado = value.desativado;
					}
					else
					{
						this._id_matricula = default(int);
						this._data = default(int);
						this._desativado = default(int);
					}
					this.SendPropertyChanged("Matricula");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aluno")]
	public partial class Aluno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _rm;
		
		private string _ra;
		
		private string _rne;
		
		private string _nome_pai;
		
		private string _nome_mae;
		
		private string _foto;
		
		private string _inf;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Matricula> _Matriculas;
		
		private EntitySet<historico> _historicos;
		
		private EntityRef<Anotacoe> _Anotacoe;
		
		private EntityRef<Pessoa> _Pessoa;
		
		private EntityRef<status> _status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrmChanging(string value);
    partial void OnrmChanged();
    partial void OnraChanging(string value);
    partial void OnraChanged();
    partial void OnrneChanging(string value);
    partial void OnrneChanged();
    partial void Onnome_paiChanging(string value);
    partial void Onnome_paiChanged();
    partial void Onnome_maeChanging(string value);
    partial void Onnome_maeChanged();
    partial void OnfotoChanging(string value);
    partial void OnfotoChanged();
    partial void OninfChanging(string value);
    partial void OninfChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Aluno()
		{
			this._Matriculas = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matriculas), new Action<Matricula>(this.detach_Matriculas));
			this._historicos = new EntitySet<historico>(new Action<historico>(this.attach_historicos), new Action<historico>(this.detach_historicos));
			this._Anotacoe = default(EntityRef<Anotacoe>);
			this._Pessoa = default(EntityRef<Pessoa>);
			this._status1 = default(EntityRef<status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rm", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string rm
		{
			get
			{
				return this._rm;
			}
			set
			{
				if ((this._rm != value))
				{
					this.OnrmChanging(value);
					this.SendPropertyChanging();
					this._rm = value;
					this.SendPropertyChanged("rm");
					this.OnrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ra", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ra
		{
			get
			{
				return this._ra;
			}
			set
			{
				if ((this._ra != value))
				{
					this.OnraChanging(value);
					this.SendPropertyChanging();
					this._ra = value;
					this.SendPropertyChanged("ra");
					this.OnraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rne", DbType="VarChar(50)")]
		public string rne
		{
			get
			{
				return this._rne;
			}
			set
			{
				if ((this._rne != value))
				{
					this.OnrneChanging(value);
					this.SendPropertyChanging();
					this._rne = value;
					this.SendPropertyChanged("rne");
					this.OnrneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome_pai", DbType="VarChar(100)")]
		public string nome_pai
		{
			get
			{
				return this._nome_pai;
			}
			set
			{
				if ((this._nome_pai != value))
				{
					this.Onnome_paiChanging(value);
					this.SendPropertyChanging();
					this._nome_pai = value;
					this.SendPropertyChanged("nome_pai");
					this.Onnome_paiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome_mae", DbType="VarChar(100)")]
		public string nome_mae
		{
			get
			{
				return this._nome_mae;
			}
			set
			{
				if ((this._nome_mae != value))
				{
					this.Onnome_maeChanging(value);
					this.SendPropertyChanging();
					this._nome_mae = value;
					this.SendPropertyChanged("nome_mae");
					this.Onnome_maeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto", DbType="VarChar(100)")]
		public string foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inf", DbType="VarChar(MAX)")]
		public string inf
		{
			get
			{
				return this._inf;
			}
			set
			{
				if ((this._inf != value))
				{
					this.OninfChanging(value);
					this.SendPropertyChanging();
					this._inf = value;
					this.SendPropertyChanged("inf");
					this.OninfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Matricula", Storage="_Matriculas", ThisKey="id", OtherKey="id_aluno")]
		public EntitySet<Matricula> Matriculas
		{
			get
			{
				return this._Matriculas;
			}
			set
			{
				this._Matriculas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_historico", Storage="_historicos", ThisKey="id", OtherKey="id_aluno")]
		public EntitySet<historico> historicos
		{
			get
			{
				return this._historicos;
			}
			set
			{
				this._historicos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Anotacoe", Storage="_Anotacoe", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Anotacoe Anotacoe
		{
			get
			{
				return this._Anotacoe.Entity;
			}
			set
			{
				Anotacoe previousValue = this._Anotacoe.Entity;
				if (((previousValue != value) 
							|| (this._Anotacoe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Anotacoe.Entity = null;
						previousValue.Aluno = null;
					}
					this._Anotacoe.Entity = value;
					if ((value != null))
					{
						value.Aluno = this;
					}
					this.SendPropertyChanged("Anotacoe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Aluno", Storage="_Pessoa", ThisKey="id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Aluno = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Aluno = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_Aluno", Storage="_status1", ThisKey="status", OtherKey="id", IsForeignKey=true)]
		public status status1
		{
			get
			{
				return this._status1.Entity;
			}
			set
			{
				status previousValue = this._status1.Entity;
				if (((previousValue != value) 
							|| (this._status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._status1.Entity = null;
						previousValue.Alunos.Remove(this);
					}
					this._status1.Entity = value;
					if ((value != null))
					{
						value.Alunos.Add(this);
						this._status = value.id;
					}
					else
					{
						this._status = default(Nullable<int>);
					}
					this.SendPropertyChanged("status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Matriculas(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = this;
		}
		
		private void detach_Matriculas(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = null;
		}
		
		private void attach_historicos(historico entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = this;
		}
		
		private void detach_historicos(historico entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.historico")]
	public partial class historico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_serie;
		
		private string _nome_escola;
		
		private int _ano;
		
		private int _id_cidade;
		
		private int _id_aluno;
		
		private EntityRef<Aluno> _Aluno;
		
		private EntityRef<Cidade> _Cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_serieChanging(int value);
    partial void Onid_serieChanged();
    partial void Onnome_escolaChanging(string value);
    partial void Onnome_escolaChanged();
    partial void OnanoChanging(int value);
    partial void OnanoChanged();
    partial void Onid_cidadeChanging(int value);
    partial void Onid_cidadeChanged();
    partial void Onid_alunoChanging(int value);
    partial void Onid_alunoChanged();
    #endregion
		
		public historico()
		{
			this._Aluno = default(EntityRef<Aluno>);
			this._Cidade = default(EntityRef<Cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_serie", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_serie
		{
			get
			{
				return this._id_serie;
			}
			set
			{
				if ((this._id_serie != value))
				{
					this.Onid_serieChanging(value);
					this.SendPropertyChanging();
					this._id_serie = value;
					this.SendPropertyChanged("id_serie");
					this.Onid_serieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome_escola", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome_escola
		{
			get
			{
				return this._nome_escola;
			}
			set
			{
				if ((this._nome_escola != value))
				{
					this.Onnome_escolaChanging(value);
					this.SendPropertyChanging();
					this._nome_escola = value;
					this.SendPropertyChanged("nome_escola");
					this.Onnome_escolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ano", DbType="Int NOT NULL")]
		public int ano
		{
			get
			{
				return this._ano;
			}
			set
			{
				if ((this._ano != value))
				{
					this.OnanoChanging(value);
					this.SendPropertyChanging();
					this._ano = value;
					this.SendPropertyChanged("ano");
					this.OnanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cidade", DbType="Int NOT NULL")]
		public int id_cidade
		{
			get
			{
				return this._id_cidade;
			}
			set
			{
				if ((this._id_cidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cidadeChanging(value);
					this.SendPropertyChanging();
					this._id_cidade = value;
					this.SendPropertyChanged("id_cidade");
					this.Onid_cidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_aluno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_aluno
		{
			get
			{
				return this._id_aluno;
			}
			set
			{
				if ((this._id_aluno != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_alunoChanging(value);
					this.SendPropertyChanging();
					this._id_aluno = value;
					this.SendPropertyChanged("id_aluno");
					this.Onid_alunoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_historico", Storage="_Aluno", ThisKey="id_aluno", OtherKey="id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.historicos.Remove(this);
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.historicos.Add(this);
						this._id_aluno = value.id;
					}
					else
					{
						this._id_aluno = default(int);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_historico", Storage="_Cidade", ThisKey="id_cidade", OtherKey="id", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.historicos.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.historicos.Add(this);
						this._id_cidade = value.id;
					}
					else
					{
						this._id_cidade = default(int);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Anotacoes")]
	public partial class Anotacoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Anotacao;
		
		private EntityRef<Aluno> _Aluno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAnotacaoChanging(string value);
    partial void OnAnotacaoChanged();
    #endregion
		
		public Anotacoe()
		{
			this._Aluno = default(EntityRef<Aluno>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anotacao", DbType="VarChar(MAX)")]
		public string Anotacao
		{
			get
			{
				return this._Anotacao;
			}
			set
			{
				if ((this._Anotacao != value))
				{
					this.OnAnotacaoChanging(value);
					this.SendPropertyChanging();
					this._Anotacao = value;
					this.SendPropertyChanged("Anotacao");
					this.OnAnotacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Anotacoe", Storage="_Aluno", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.Anotacoe = null;
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.Anotacoe = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnoLetivo")]
	public partial class AnoLetivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ano;
		
		private int _status;
		
		private EntityRef<status> _status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnanoChanging(int value);
    partial void OnanoChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public AnoLetivo()
		{
			this._status1 = default(EntityRef<status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ano", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ano
		{
			get
			{
				return this._ano;
			}
			set
			{
				if ((this._ano != value))
				{
					this.OnanoChanging(value);
					this.SendPropertyChanging();
					this._ano = value;
					this.SendPropertyChanged("ano");
					this.OnanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_AnoLetivo", Storage="_status1", ThisKey="status", OtherKey="id", IsForeignKey=true)]
		public status status1
		{
			get
			{
				return this._status1.Entity;
			}
			set
			{
				status previousValue = this._status1.Entity;
				if (((previousValue != value) 
							|| (this._status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._status1.Entity = null;
						previousValue.AnoLetivos.Remove(this);
					}
					this._status1.Entity = value;
					if ((value != null))
					{
						value.AnoLetivos.Add(this);
						this._status = value.id;
					}
					else
					{
						this._status = default(int);
					}
					this.SendPropertyChanged("status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
